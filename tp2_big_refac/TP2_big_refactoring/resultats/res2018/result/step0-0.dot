digraph G { 
	rankdir=BT;
	margin=0;
	node [margin="0.03,0.03",fontname="DejaVu Sans"];
	ranksep=0.3;
	nodesep=0.2;
//graph[label="name:Collections,concept number:5,object number:5,attribute number:88"
0 [shape=none,label=<<table border="0" cellborder="1" cellspacing="0" port="p"><tr><td>Concept_Collections_4</td></tr><tr><td>int add(java.lang.Object, int)<br/>int remove(java.lang.Object, int)<br/>int count(java.lang.Object)<br/>interface java.util.Set entrySet()<br/>interface java.util.Set elementSet()<br/>boolean setCount(java.lang.Object, int, int)<br/>int setCount(java.lang.Object, int)<br/>boolean add(java.lang.Object)<br/>boolean remove(java.lang.Object)<br/>void clear()<br/>boolean contains(java.lang.Object)<br/>boolean isEmpty()<br/>interface java.util.Iterator iterator()<br/>int size()<br/>class [Ljava.lang.Object; toArray([Ljava.lang.Object;)<br/>class [Ljava.lang.Object; toArray()<br/>boolean addAll(java.util.Collection)<br/>boolean containsAll(java.util.Collection)<br/>boolean removeAll(java.util.Collection)<br/>boolean retainAll(java.util.Collection)<br/>interface java.util.stream.Stream stream()<br/>boolean removeIf(java.util.function.Predicate)<br/>interface java.util.stream.Stream parallelStream()<br/>interface java.util.Spliterator spliterator()<br/>void forEach(java.util.function.Consumer)<br/>void forEachEntry(java.util.function.ObjIntConsumer)<br/></td></tr><tr><td>ForwardingMultiset<br/></td></tr></table>>];
1 [shape=none,label=<<table border="0" cellborder="1" cellspacing="0" port="p"><tr><td>Concept_Collections_3</td></tr><tr><td>interface com.google.common.collect.SortedMultiset descendingMultiset()<br/>interface java.util.SortedSet elementSet()<br/>interface java.util.NavigableSet elementSet()<br/>interface com.google.common.collect.Multiset$Entry lastEntry()<br/>interface com.google.common.collect.Multiset$Entry pollLastEntry()<br/>interface java.util.Comparator comparator()<br/>interface com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)<br/>interface com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)<br/>interface com.google.common.collect.Multiset$Entry pollFirstEntry()<br/>interface com.google.common.collect.Multiset$Entry firstEntry()<br/>interface com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)<br/></td></tr><tr><td>ForwardingSortedMultiset<br/>SortedMultiset<br/></td></tr></table>>];
2 [shape=none,label=<<table border="0" cellborder="1" cellspacing="0" port="p"><tr><td>Concept_Collections_0</td></tr><tr><td><br/></td></tr><tr><td><br/></td></tr></table>>];
3 [shape=none,label=<<table border="0" cellborder="1" cellspacing="0" port="p"><tr><td>Concept_Collections_2</td></tr><tr><td>class com.google.common.collect.HashMultiset create(int)<br/>class com.google.common.collect.HashMultiset create(java.lang.Iterable)<br/>class com.google.common.collect.HashMultiset create()<br/></td></tr><tr><td>HashMultiset<br/></td></tr></table>>];
4 [shape=none,label=<<table border="0" cellborder="1" cellspacing="0" port="p"><tr><td>Concept_Collections_1</td></tr><tr><td>class com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator, java.lang.Iterable)<br/>class com.google.common.collect.ImmutableSortedMultiset copyOf([Ljava.lang.Comparable;)<br/>class com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Iterable)<br/>class com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator, java.util.Iterator)<br/>class com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Iterator)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable)<br/>class com.google.common.collect.ImmutableSortedMultiset of()<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, java.lang.Comparable, [Ljava.lang.Comparable;)<br/>class com.google.common.collect.ImmutableSortedMultiset$Builder naturalOrder()<br/>class com.google.common.collect.ImmutableSortedMultiset$Builder reverseOrder()<br/>interface java.util.stream.Collector toImmutableSortedMultiset(java.util.Comparator, java.util.function.Function, java.util.function.ToIntFunction)<br/>interface java.util.stream.Collector toImmutableSortedMultiset(java.util.Comparator)<br/>class com.google.common.collect.ImmutableSortedMultiset descendingMultiset()<br/>class com.google.common.collect.ImmutableSet elementSet()<br/>class com.google.common.collect.ImmutableSortedSet elementSet()<br/>class com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)<br/>class com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)<br/>class com.google.common.collect.ImmutableSortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)<br/>class com.google.common.collect.ImmutableSortedMultiset$Builder orderedBy(java.util.Comparator)<br/>class com.google.common.collect.ImmutableSortedMultiset copyOfSorted(com.google.common.collect.SortedMultiset)<br/>class com.google.common.collect.ImmutableSortedMultiset copyOf([Ljava.lang.Object;)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object, java.lang.Object, java.lang.Object)<br/>class com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object)<br/>interface java.util.stream.Collector toImmutableMultiset(java.util.function.Function, java.util.function.ToIntFunction)<br/>interface java.util.stream.Collector toImmutableMultiset()<br/>class com.google.common.collect.ImmutableSortedMultiset$Builder builder()<br/>class com.google.common.collect.ImmutableMultiset copyOf([Ljava.lang.Object;)<br/>class com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable)<br/>class com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator)<br/>class com.google.common.collect.UnmodifiableIterator iterator()<br/>class com.google.common.collect.ImmutableSet entrySet()<br/>class com.google.common.collect.ImmutableList asList()<br/>class com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)<br/>class com.google.common.collect.ImmutableMultiset of()<br/>class com.google.common.collect.ImmutableMultiset of(java.lang.Object)<br/>class com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object)<br/>class com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, [Ljava.lang.Object;)<br/>class com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object)<br/>class com.google.common.collect.ImmutableMultiset of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)<br/>class com.google.common.collect.ImmutableMultiset$Builder builder()<br/></td></tr><tr><td>ImmutableSortedMultiset<br/></td></tr></table>>];
	1:p -> 0:p
	3:p -> 0:p
	4:p -> 1:p
	2:p -> 3:p
	2:p -> 4:p
}